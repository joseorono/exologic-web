---
interface Props {
  title: string;
  description: string;
  iconUrl: string;
}

const { title, description,  iconUrl } = Astro.props;
const publicPath = iconUrl.startsWith('/') ? iconUrl : `/${iconUrl}`;

---

<div
  class="card  min-h-[600px] border-[1px] border-base-500 rounded-[10px] group transition-all duration-300 "
>
  {/* Normal State */}
  <div class="h-full transition-all duration-300 transform group-hover:hidden ">
    <div class=`min-h-80 p-2`
    style={`
      background-image: url(${publicPath});
      background-repeat: repeat;
      background-size: 30%;
      background-position: center;
    `}
    >
    </div>
    <div class="card-body p-8">
      <h3 class="card-title text-heading-3 text-white">
        {title}
      </h3>
    </div>
  </div>

  {/* Hover State */}
  <div class="h-full relative px-6 py-8 rounded-[10px] hidden group-hover:block transition-all duration-300 bg-base-500">
    <div class="card-body p-0 md:pb-24">
      <h3 class="text-heading-3">
        {title}
      </h3>
      <img class="w-1/3 stroke-2 h-[1px] my-8" src="assets/icons/services/line.png">
      <p class="text-regular text-left">
        {description.split("\n").map((line) => (
          <>
            {line}
            <br />
            <br />
          </>
        ))}
      </p>
    </div>
    <div class="mt-6 md:absolute md:bottom-8 md:left-6">
      <button class="p-6 outlined-button">
        Quote now
      </button>
    </div>
  </div>
</div>
